// Code generated by mockery v2.32.2. DO NOT EDIT.

package mocks

import (
	label "github.com/Mellanox/nic-feature-discovery/pkg/label"
	mock "github.com/stretchr/testify/mock"
)

// LabelWriter is an autogenerated mock type for the LabelWriter type
type LabelWriter struct {
	mock.Mock
}

type LabelWriter_Expecter struct {
	mock *mock.Mock
}

func (_m *LabelWriter) EXPECT() *LabelWriter_Expecter {
	return &LabelWriter_Expecter{mock: &_m.Mock}
}

// Write provides a mock function with given fields: labels
func (_m *LabelWriter) Write(labels []label.Label) error {
	ret := _m.Called(labels)

	var r0 error
	if rf, ok := ret.Get(0).(func([]label.Label) error); ok {
		r0 = rf(labels)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// LabelWriter_Write_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'Write'
type LabelWriter_Write_Call struct {
	*mock.Call
}

// Write is a helper method to define mock.On call
//   - labels []label.Label
func (_e *LabelWriter_Expecter) Write(labels interface{}) *LabelWriter_Write_Call {
	return &LabelWriter_Write_Call{Call: _e.mock.On("Write", labels)}
}

func (_c *LabelWriter_Write_Call) Run(run func(labels []label.Label)) *LabelWriter_Write_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].([]label.Label))
	})
	return _c
}

func (_c *LabelWriter_Write_Call) Return(_a0 error) *LabelWriter_Write_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *LabelWriter_Write_Call) RunAndReturn(run func([]label.Label) error) *LabelWriter_Write_Call {
	_c.Call.Return(run)
	return _c
}

// NewLabelWriter creates a new instance of LabelWriter. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewLabelWriter(t interface {
	mock.TestingT
	Cleanup(func())
}) *LabelWriter {
	mock := &LabelWriter{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
