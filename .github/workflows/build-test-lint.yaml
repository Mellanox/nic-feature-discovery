name: "Build, Test, Lint"
on: [push, pull_request]
jobs:
  build:
    strategy:
      matrix:
        go-version: [1.24.x]
        goarch: [amd64]
        os: [ubuntu-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Set up Go matrix
        uses: actions/setup-go@v5
        with:
          go-version: ${{ matrix.go-version }}
      - name: Check out code into the Go module directory
        uses: actions/checkout@v3
      - name: Install Task
        uses: arduino/setup-task@v1
        with:
          version: 3.x
          repo-token: ${{ secrets.GITHUB_TOKEN }}
      - name: Build
        env:
          GOARCH: ${{ matrix.goarch }}
          GOOS: ${{ matrix.goos }}
        run: task build
  lint:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: 1.24.x
      - name: Check out code into the Go module directory
        uses: actions/checkout@v3
      - name: Install Task
        uses: arduino/setup-task@v1
        with:
          version: 3.x
          repo-token: ${{ secrets.GITHUB_TOKEN }}
      - name: Lint
        run: task lint
  test:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: 1.24.x
      - name: Check out code into the Go module directory
        uses: actions/checkout@v3
      - name: Install Task
        uses: arduino/setup-task@v1
        with:
          version: 3.x
          repo-token: ${{ secrets.GITHUB_TOKEN }}
      - name: Run tests
        run: task test
  build-image:
    runs-on: ubuntu-latest
    steps:
      - name: Check out code into the Go module directory
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Install Task
        uses: arduino/setup-task@v1
        with:
          version: 3.x
          repo-token: ${{ secrets.GITHUB_TOKEN }}
      - name: Build image
        run: task image:build
  go-check:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v3
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: 1.24.x
      # if this fails, run go mod tidy
      - name: Check if module files are consistent with code
        run: go mod tidy && git diff --exit-code
  coverage:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v3
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: 1.24.x
      - name: Install Task
        uses: arduino/setup-task@v1
        with:
          version: 3.x
          repo-token: ${{ secrets.GITHUB_TOKEN }}
      - name: Generate coverage report
        run: task test
      - name: Upload to Coveralls
        uses: coverallsapp/github-action@v2
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          file: nic-feature-discovery.cover
